name: Docker Image CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Calculate new version number
    - name: Calculate new version number
      run: echo "NEW_VERSION=$(python scripts/calculate_version.py)" >> $GITHUB_ENV

    # Log in to DockerHub
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    # Build and push the Docker image
    - name: Build and Push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: robounord/pgsql_backups:${{ env.NEW_VERSION }}  # Change this to your DockerHub username and image name

    # Update docker-compose.yml and version.txt (comment docker-compose.yml out if you don't use it)
    - name: Update docker-compose.yml and version.txt
      if: success()
      run: |
        python scripts/update_docker_compose.py ${{ env.NEW_VERSION }} || exit 1 
        python scripts/update_version_txt.py || exit 1  
        git config user.name github-actions || exit 1
        git config user.email github-actions@github.com || exit 1
        git add docker-compose.yml version.txt || exit 1
        git commit -m "Update docker-compose and version.txt with new image version ${{ env.NEW_VERSION }}" || exit 1
        git push || exit 1
